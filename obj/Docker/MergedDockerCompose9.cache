name: dockercompose8001228159139344429
services:
  database:
    environment:
      POSTGRES_DB: Test
      POSTGRES_PASSWORD: "123456789"
      POSTGRES_USER: postgres
    image: postgres:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    volumes:
      - type: volume
        source: dbdata
        target: /var/lib/postgresql/data
        volume: {}
  testworktowallet:
    build:
      context: C:\Users\grego\source\repos\TestWorkToWallet
      dockerfile: TestWorkToWallet/Dockerfile
    depends_on:
      database:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_HTTP_PORTS: "8080"
      ASPNETCORE_HTTPS_PORTS: "8081"
      ConnectionStrings__DefaultConnection: Host=database;Port=5432;Database=Test;Username=postgres;Password=123456789
    image: testworktowallet:latest
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        published: "8080"
        protocol: tcp
      - mode: ingress
        target: 8080
        protocol: tcp
      - mode: ingress
        target: 8081
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\grego\AppData\Roaming/Microsoft/UserSecrets
        target: C:\Users\ContainerUser\AppData\Roaming\Microsoft\UserSecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\grego\AppData\Roaming/ASP.NET/Https
        target: C:\Users\ContainerUser\AppData\Roaming\ASP.NET\Https
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose8001228159139344429_default
volumes:
  dbdata:
    name: dockercompose8001228159139344429_dbdata